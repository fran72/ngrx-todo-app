{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { isDevMode } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n// NGrx\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { appReducers } from './app.reducer';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoPageComponent } from './todos/todo-page/todo-page.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/store-devtools\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, ReactiveFormsModule, AppRoutingModule, StoreModule.forRoot(appReducers), StoreDevtoolsModule.instrument({\n        maxAge: 25,\n        // Retains last 25 states\n        logOnly: !isDevMode(),\n        // Restrict extension to log-only mode\n        autoPause: true,\n        // Pauses recording actions and state changes when the extension window is not open\n        trace: false,\n        //  If set to true, will include stack trace for every dispatched action, so you can see it in trace tab jumping directly to that part of code\n        traceLimit: 75,\n        // maximum stack trace frames to be stored (in case trace option was provided as true)\n        connectInZone: true // If set to true, the connection is established within the Angular zone\n      }), TodoPageComponent]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}